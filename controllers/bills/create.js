// Generated by CoffeeScript 1.9.1
(function() {
  'use strict';
  var bills_db, products_db, purchases_db, saveBill, savePurchase;

  bills_db = require('../../models/bills_db');

  purchases_db = require('../../models/purchases_db');

  products_db = require('../../models/products_db');

  module.exports = function(req, res, next) {
    var bill, body, empty_items_count, i, item, j, ref;
    console.log('CREATION');
    console.log(req.body);
    if (req.user) {
      body = req.body;
      bill = {
        shop_title: req.body.shop,
        shop_id: req.body.shop_id,
        date: req.body.date,
        creator: req.user._id,
        buyer: "common",
        creation_date: new Date(),
        purchases: []
      };
      if (Array.isArray(body.title) && body.title.length > 0) {
        empty_items_count = 0;
        for (i = j = 0, ref = body.title.length; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
          item = {
            creation_date: bill.creation_date,
            creator: req.user._id,
            shop: req.body.shop,
            date: req.body.date,
            title: req.body.title[i],
            product_id: req.body.product_id[i],
            price: req.body.price[i],
            measure: req.body.measure[i],
            count: req.body.count[i],
            sum: req.body.sum[i]
          };
          if (!item.title) {
            empty_items_count++;
          }
          savePurchase(item, body.title.length - empty_items_count, bill);
        }
      }
    }
    next();
  };

  savePurchase = function(purchase, count, bill) {
    var saveToDb;
    saveToDb = function() {
      return purchases_db.purchases.save(purchase, function(err, res) {
        console.log(res);
        bill.purchases.push(res.id);
        if (bill.purchases.length === count) {
          saveBill(bill);
        }
      });
    };
    console.log(purchase);
    if (purchase.title) {
      if (!purchase.product_id) {
        products_db.products.save({
          title: purchase.title
        }, function(err, res) {
          purchase.id = res.id;
          return saveToDb();
        });
      } else {
        saveToDb();
      }
    }
  };

  saveBill = function(bill) {
    return bills_db.bills.save(bill, function(err, res) {});
  };

}).call(this);
